package MarksEnsias.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenAspectBase;
import MarksEnsias.structure.LanguageConceptSwitch;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.text.rt.TextGenDescriptor;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.text.rt.TextGenModelOutline;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;

public class TextGenAspectDescriptor extends TextGenAspectBase {
  private final LanguageConceptSwitch myIndex = new LanguageConceptSwitch();

  public TextGenAspectDescriptor() {
  }

  @Nullable
  @Override
  public TextGenDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    switch (myIndex.index(concept)) {
      case LanguageConceptSwitch.Etudiant:
        return new Etudiant_TextGen();
      case LanguageConceptSwitch.ListEtudiant:
        return new ListEtudiant_TextGen();
    }
    return null;
  }

  @Override
  public void breakdownToUnits(@NotNull TextGenModelOutline outline) {
    for (SNode root : outline.getModel().getRootNodes()) {
      if (root.getConcept().equals(CONCEPTS.Etudiant$eX)) {
        String fname = getFileName_Etudiant(root);
        String ext = getFileExtension_Etudiant(root);
        outline.registerTextUnit((ext == null ? fname : (fname + '.' + ext)), getPath_Etudiant(root), root);
        continue;
      }
      if (root.getConcept().equals(CONCEPTS.ListEtudiant$al)) {
        String fname = getFileName_ListEtudiant(root);
        String ext = getFileExtension_ListEtudiant(root);
        outline.registerTextUnit((ext == null ? fname : (fname + '.' + ext)), getPath_ListEtudiant(root), root);
        continue;
      }
    }
  }
  private static String getFileName_Etudiant(SNode node) {
    return SPropertyOperations.getString(node, PROPS.name$MnvL);
  }
  private static String getFileName_ListEtudiant(SNode node) {
    return SPropertyOperations.getString(node, PROPS.name$MnvL);
  }
  private static String getFileExtension_Etudiant(SNode node) {
    return null;
  }
  private static String getFileExtension_ListEtudiant(SNode node) {
    return null;
  }
  private static String getPath_Etudiant(SNode node) {
    return SPropertyOperations.getString(node, PROPS.name$MnvL) + ".xml";
  }
  private static String getPath_ListEtudiant(SNode node) {
    return SPropertyOperations.getString(node, PROPS.name$MnvL) + ".xml";
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Etudiant$eX = MetaAdapterFactory.getConcept(0x35be28bf56d643e3L, 0xbe30cde8df3542daL, 0x4cc498f6809f3417L, "MarksEnsias.structure.Etudiant");
    /*package*/ static final SConcept ListEtudiant$al = MetaAdapterFactory.getConcept(0x35be28bf56d643e3L, 0xbe30cde8df3542daL, 0x4cc498f680a15f52L, "MarksEnsias.structure.ListEtudiant");
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }
}
